#+TITLE: sushi.rb
#+VERSION: 2

* sushi.rb v2

** TODO [0/3] Config options

   - [ ] Specify which /utils/ will be executed by the OS instead of the defined ones.
   - [ ] Aliases
   - [ ] Prompt

** DONE Store commands in the history

   - [X] When a command is recognized, store it in the history.
   - [X] Unless it begins with a space.

** DONE Accept command arguments

   Create a an argument parser.

** TODO Outputter
   
   Some sushi.rb utilities might want to output some data to the stdout,
   we need to define a structure for that.

   #+begin_src ruby
     class Format
       def initialize message, **options
         puts options[:error],
              options[:warning],
              options[:newline]
       end
     end

     Format.new("Unknown Command", :error)
   #+end_src

** DONE Loader module
   CLOSED: [2019-12-16 Mon 21:06]

   Should populate the environment getter with all the /utils/.

** DONE Custom errors
   CLOSED: [2020-01-07 Tue 17:33]
** TODO sushirc
*** Structure

    - Variables are declared with a dollar sign ($): ~$PROMPT = "\W\t ->"~
    - Aliases are defined with the =alias= prefix: ~alias vim = v~
    - Comments are prefixed with a hash sign (#): ~# ignore me~
   
*** Parser
    
    Read all of the config options on startup. Set the environment variables accordingly,
    such as the prompt, aliases, and general options.
    
**** TODO Prompt 
     
     Escape characters accepted by the prompt:

     | Escape character | Description               |
     |------------------+---------------------------|
     | \W               | current working directory |
     | \t               | the current time HH:MM:SS |
     | \h               | hostname                  |
     | \s               | space                     |
     
**** TODO Aliases 
     
     Commands can be aliased with the =alias= prefix:

     #+begin_src ruby
     alias vim = v 
     #+end_src
     
**** TODO Comments
     
     Comments are prefixed with the hash sign (#). Just ignore them.

*** Generator

   Upon first install, make the user select where to put the config file and
   present the default path (~/sushirc).

   This module must generate default keys in the config file, such as the =$PROMPT=.

** TODO Handle unknown errors
   
   Make the shell unable to crash.
   Display what's happening and move on.

   Except when it's a StandardError (unrecoverable error, then link to the issues page)

** TODO Util exceptions

   Some utilities might need custom error messages such as =NoPermission=.

   - Add =error= metadata option

** TODO Detect OS

   To determine if commands such as =ls= need to really be defined, such as in Windows.

** TODO [3/9] Commands
*** TODO sysinfo

   Command to display useful information about the system.

   RAM
   OS
   Processor
   Uptime

   Grep =ps= or =tasklist=

*** TODO screenfetch
*** DONE help
*** TODO ls
*** DONE cowsay
*** TODO cat
*** TODO wget
*** DONE history
*** TODO >
    
    Execute inline ruby code: => puts 'hey'= 

** TODO Themes
   
   Add a color range to each theme based on the real life color representation.
   
   Scheme: text | indicator | background | borders

   | Theme     | Scheme                          |
   |-----------+---------------------------------|
   | makizuchi | #b8e05a #ffffff #6bb861 #735f54 |
   | nigiri    | #a87458 #fcf6f2 nil     nil     |
   | temaki    | #89ad2b #c7586a #303459 #b3b3b3 |
   | narezushi | #5e4e48 #211f1e #332520 nil     |
   | temari    | #9e7895 #4f3f69 #422e3e nil     |
   | oshizushi | #997065 #73a36c #9e9593 #d4d4d4 |
   
** TODO UYU AI
   
   =$ uyu infect=
   
*** Create a personal "assistant"

   UYU receives a command input and performs an operation based on the arguments

   Display stickers to show off emotions
   
   Add *thinking* spinner

   $ aoi define what bluewaffle is
   $ aoi what is a dingleberry
   $ aoi is java gay?
   $ aoi open google and send ^youtube.com<ENTER>

   AOI: system resources are depleted (RAM), run a cleanup?
   AOI: this program: ' ' is taking 2GBs

                                             •ᴗ•

                                             hello.

                                             ( •_•)

                                             i... have no idea

                                             (¬､¬)
                                RED don't talk to me anymore RED

*** Lock mode

    Perceives average typing speed and is able to recognize whether the person typing is the main user or not

*** Cache used responses

    NEVER repeat the same phrases

*** Learn as you go

    store most common commands
    scrape the internet for useful shit

*** Add smalltalk command
   
   >_<
   
   it sure is nice today huh

   <USER> why are you using google chrome?

   pls talk to me!

